// file: CalendarOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package grupos;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: CalendarOntology.java
 * @author ontology bean generator
 * @version 2016/04/15, 00:38:37
 */
public class CalendarOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "calendar";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new CalendarOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String BD_GRUPOS="grupos";
    public static final String BD="BD";
    public static final String ACTIVIDAD_ID="id";
    public static final String ACTIVIDAD_LIMITEDIAS="limiteDias";
    public static final String ACTIVIDAD_OBJETIVO="objetivo";
    public static final String ACTIVIDAD_NOMBRE="nombre";
    public static final String ACTIVIDAD_LUGAR="lugar";
    public static final String ACTIVIDAD_MAXESTUDIANTES="maxEstudiantes";
    public static final String ACTIVIDAD_PRIORIDAD="prioridad";
    public static final String ACTIVIDAD="Actividad";
    public static final String GRUPO_ID="id";
    public static final String GRUPO_NOMBRE="nombre";
    public static final String GRUPO_LOGO="logo";
    public static final String GRUPO_ESTUDIANTES="estudiantes";
    public static final String GRUPO="Grupo";
    public static final String ESTUDIANTE_TELEFONO="telefono";
    public static final String ESTUDIANTE_ID="id";
    public static final String ESTUDIANTE_EDAD="edad";
    public static final String ESTUDIANTE_NOMBRE="nombre";
    public static final String ESTUDIANTE_CORREO="correo";
    public static final String ESTUDIANTE="Estudiante";
    public static final String DISPONIBILIDAD_ID="id";
    public static final String DISPONIBILIDAD_HORA="hora";
    public static final String DISPONIBILIDAD_FECHA="fecha";
    public static final String DISPONIBILIDAD="Disponibilidad";

  /**
   * Constructor
  */
  private CalendarOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema disponibilidadSchema = new ConceptSchema(DISPONIBILIDAD);
    add(disponibilidadSchema, grupos.Disponibilidad.class);
    ConceptSchema estudianteSchema = new ConceptSchema(ESTUDIANTE);
    add(estudianteSchema, grupos.Estudiante.class);
    ConceptSchema grupoSchema = new ConceptSchema(GRUPO);
    add(grupoSchema, grupos.Grupo.class);
    ConceptSchema actividadSchema = new ConceptSchema(ACTIVIDAD);
    add(actividadSchema, grupos.Actividad.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema bdSchema = new PredicateSchema(BD);
    add(bdSchema, grupos.BD.class);


    // adding fields
    disponibilidadSchema.add(DISPONIBILIDAD_FECHA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    disponibilidadSchema.add(DISPONIBILIDAD_HORA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    disponibilidadSchema.add(DISPONIBILIDAD_ID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_CORREO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_EDAD, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_ID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_TELEFONO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    grupoSchema.add(GRUPO_ESTUDIANTES, estudianteSchema, 0, ObjectSchema.UNLIMITED);
    grupoSchema.add(GRUPO_LOGO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    grupoSchema.add(GRUPO_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    grupoSchema.add(GRUPO_ID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_PRIORIDAD, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_MAXESTUDIANTES, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_LUGAR, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_OBJETIVO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_LIMITEDIAS, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    actividadSchema.add(ACTIVIDAD_ID, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    bdSchema.add(BD_GRUPOS, grupoSchema, ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
